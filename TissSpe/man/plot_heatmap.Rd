% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{plot_heatmap}
\alias{plot_heatmap}
\title{Heatmap for subset specific-expression}
\usage{
plot_heatmap(lst, dat_type = "raw", specificity = c(0.8, 1),
  ts_method = "Tau", Ib = 1, angle_col = 45, cluster_cols = FALSE,
  cluster_rows = FALSE, show_rownames = FALSE, ...)
}
\arguments{
\item{lst}{List of 3 data.frame. one of them contains psi values with their
specificty values of 9 methods: "Tau", "Gini", "Tsi", "Counts", "Ee", "Pem",
"Hg", "Z", "Spm"(named "raw"), the second contains rank values and binary
index(named "rank"), the third contains binary pattern values and
index binary "Ib"(named "bin"), which were generated from \code{ts_psi} or
\code{ts_expr}.}

\item{dat_type}{"raw", "rank" or c('raw', 'rank'). Plot "raw"(psi/FPKM/RPKM/TPM) or
"rank"(0-n+1). Default "raw". "raw" work with \code{specificity}, and
"rank" work with \code{Ib}. If specify c('raw', 'rank'), then plot the heatmap of
raw value(psi or tpm) of Ib.}

\item{specificity}{Vector of range, numeric. Region of specificity to plot,
work with \code{dat_type}="raw". Default \code{c(0.8, 1)}.}

\item{ts_method}{Specificity methods. "Tau", "Gini", "TSI", "Counts", "EE",
"Hg", "Zscore", "Spm" or "Pem".}

\item{Ib}{Integer. Cutoff of binary index, work with \code{dat_type}="rank".}

\item{angle_col}{refer to the same parameter in \code{pheatmap}.}

\item{cluster_cols}{refer to the same parameter in \code{pheatmap}.}

\item{cluster_rows}{refer to the same parameter in \code{pheatmap}.}

\item{show_rownames}{refer to the same parameter in \code{pheatmap}.}

\item{...}{parameters of \code{pheatmap} pkg.}
}
\description{
Wrapper function derived from \code{pheatmap}. Use the results of
\code{ts_expr} or \code{ts_psi} as Input. Using pheatmap youself may be
better for yourwork sometimes.
}
\examples{
result <- ts_psi(demo_psi,
                 tissues = c("sample_A", "sample_B", "sample_C",
                             "sample_D", "sample_E", "sample_F",
                             "sample_G", "sample_H", "sample_I",
                             "sample_J", "sample_K", "sample_L",
                             "sample_M", "sample_N", "sample_O",
                             "sample_P", "sample_Q"),
                             identifier = "AS_events")
plot_heatmap(result)
plot_heatmap(result, dat_type = "rank", Ib = 2)
}
